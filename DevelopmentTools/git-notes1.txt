git命令使用：https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000

在github创建项目，https://github.com/Donaldhan/newp.git，
注意必须是空白的，没有添加gitgnore和readme.MD文件
github提示如下
ssh协议：
Quick setup — if you’ve done this kind of thing before
or

We recommend every repository include a README, LICENSE, and .gitignore.
…or create a new repository on the command line

echo "# newp" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/Donaldhan/newp.git
git push -u origin master

…or push an existing repository from the command line

git remote add origin https://github.com/Donaldhan/newp.git
git push -u origin master

…or import code from another repository

You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

https协议：

Quick setup — if you’ve done this kind of thing before
or

We recommend every repository include a README, LICENSE, and .gitignore.
…or create a new repository on the command line

echo "# newp" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/Donaldhan/newp.git
git push -u origin master

…or push an existing repository from the command line

git remote add origin https://github.com/Donaldhan/newp.git
git push -u origin master

…or import code from another repository

You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

####################################
添加远程仓库
####################################
本地仓库分支
donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git status
On branch master
nothing to commit, working tree clean


donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git remote add origin git@github.com:Donaldhan/newp.git

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git push -u origin master
Enter passphrase for key '/c/Users/donald/.ssh/id_rsa':
Counting objects: 25, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (15/15), done.
Writing objects: 100% (25/25), 2.15 KiB | 0 bytes/s, done.
Total 25 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), done.
To github.com:Donaldhan/newp.git
 * [new branch]      master -> master
Branch master set up to track remote branch master from origin.

查看现在的分支版本为origin/master

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working tree clean


HTTP协议 添加分支
donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git remote add origin https://github.com/Donaldhan/newp.git
剩余的和SSH协议基本相同

上面我们是，先有本地库，后有远程库的时候，关联远程库。
现在，假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。
git 的clone方式，我们在前面git-command-solve-conflict.txt文中已说。

Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。

#####################################################
创建与分支合并
######################################################

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ ls
notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working tree clean

创建分支
donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git branch dev

切换分支

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git checkout dev
Switched to branch 'dev'

查看分支，*后的为当前分支
donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ git branch
* dev
  master

donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ ls
notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ cat notes.txt
just test

command

branch

test state

在dev分支上，修改

donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ vim notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ git add notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ git commit -m "work on dev branch"
[dev 640a114] work on dev branch
 1 file changed, 2 insertions(+)

donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ git status
On branch dev
nothing to commit, working tree clean

切换回master主分支
donald@donaldHP MINGW64 /f/testgit/newproject (dev)
$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.


donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ cat notes.txt
just test

command

branch

test state

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working tree clean

合并dev分支到master
donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git merge dev
Updating 2576169..640a114
Fast-forward
 notes.txt | 2 ++
 1 file changed, 2 insertions(+)

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ cat notes
cat: notes: No such file or directory

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ cat notes.txt
just test

command

branch

test state

work on dev branch

删除dev分支

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git branch -d dev
Deleted branch dev (was 640a114).

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git branch
* master

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$


Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

######################################
解决冲突
######################################
建立test分支，并在分支修改notes文件，并提交
donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git branch test

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git checkout test
Switched to branch 'test'

donald@donaldHP MINGW64 /f/testgit/newproject (test)
$ vim notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (test)
$ git add notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (test)
$ git commit -m "simulate conflict"
[test 0ecbcc5] simulate conflict
 1 file changed, 2 insertions(+)

donald@donaldHP MINGW64 /f/testgit/newproject (test)
$ git status
On branch test
nothing to commit, working tree clean

切换到分支，修改notes文件，并提交，合并test分支到master分支
donald@donaldHP MINGW64 /f/testgit/newproject (test)
$ git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Git还会自动提示我们当前master分支比远程的master分支要超前1个提交。

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ vim notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git add notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git commit "simulate conflict on master"
error: pathspec 'simulate conflict on master' did not match any file(s) known to git.

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git commit -m "simulate conflict on master"
[master 046c708] simulate conflict on master
 1 file changed, 2 insertions(+)

合并test分支到master分支
donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git merge test
Auto-merging notes.txt
CONFLICT (content): Merge conflict in notes.txt
Automatic merge failed; fix conflicts and then commit the result.

有冲突，查看冲突信息
donald@donaldHP MINGW64 /f/testgit/newproject (master|MERGING)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)

        both modified:   notes.txt

no changes added to commit (use "git add" and/or "git commit -a")

查看冲突文件

donald@donaldHP MINGW64 /f/testgit/newproject (master|MERGING)
$ cat notes.txt
just test

command

branch

test state

work on dev branch
<<<<<<< HEAD
solve the conflict from test branch on master branch
=======
simulate conflict on test branch
>>>>>>> test

Git用<<<<<<<，=======，>>>>>>>标记出不同分支的内容，我们修改如下后保存：

donald@donaldHP MINGW64 /f/testgit/newproject (master|MERGING)
$ vim notes.txt

donald@donaldHP MINGW64 /f/testgit/newproject (master|MERGING)
$ cat notes.txt
just test

command

branch

test state

work on dev branch

solve the conflict from test branch on master branch

simulate conflict on test branch

donald@donaldHP MINGW64 /f/testgit/newproject (master|MERGING)
$ git add notes.txt


donald@donaldHP MINGW64 /f/testgit/newproject (master|MERGING)
$ git commit -m "fix conflict"
[master cfc8bb6] fix conflict

查看分支合并情况

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git log --graph --pretty=oneline --abbrev-commit
*   cfc8bb6 fix conflict
|\
| * 0ecbcc5 simulate conflict
* | 046c708 simulate conflict on master
|/
* 640a114 work on dev branch
* 2576169 rm readme
* 468bdf8 remove git rm test file
* 90e62df add test.txt
* 6374601 rename notes tp notes.txt
* cdaf43c rename notes tp notes.txt
* a0a0af9 add test state sentence
* 7af842c add branch sentence
* 305f86b add readme
* ca70d2a add command
* 82ae670 add notes

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git log --graph
*   commit cfc8bb620002a2a7191d308985ea9f7f87c65c32
|\  Merge: 046c708 0ecbcc5
| | Author: doanldhan <shaoqinghanah@qq.com>
| | Date:   Wed Aug 30 13:18:32 2017 +0800
| |
| |     fix conflict
| |
| * commit 0ecbcc5604bac8790dd87bae4e54c7c1f061adcd
| | Author: doanldhan <shaoqinghanah@qq.com>
| | Date:   Wed Aug 30 13:12:52 2017 +0800
| |
| |     simulate conflict
| |
* | commit 046c708a878d80592db6a53357fec9a56809c668
|/  Author: doanldhan <shaoqinghanah@qq.com>
|   Date:   Wed Aug 30 13:15:05 2017 +0800
|
|       simulate conflict on master
|
* commit 640a11442ca06cba2f3f246fb6c58bcea142a28a
| Author: doanldhan <shaoqinghanah@qq.com>
| Date:   Wed Aug 30 13:03:35 2017 +0800
|
|     work on dev branch
|
* commit 25761693681696e79675c2dd7ade81aa457769ca
| Author: doanldhan <shaoqinghanah@qq.com>
| Date:   Wed Aug 30 11:17:29 2017 +0800
|
|     rm readme
|
* commit 468bdf8889f1779018e6203cae2922aa7bf9fdbc
| Author: doanldhan <shaoqinghanah@qq.com>
| Date:   Wed Aug 30 10:54:11 2017 +0800
|
|     remove git rm test file
|
* commit 90e62df5fb7d9889da81d4a9fe9172450dfcd372
| Author: doanldhan <shaoqinghanah@qq.com>
| Date:   Wed Aug 30 10:52:34 2017 +0800
:

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ ^C

删除test分支

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git branch -d test
Deleted branch test (was 0ecbcc5).

donald@donaldHP MINGW64 /f/testgit/newproject (master)
$ git branch
* master

当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。

用git log --graph命令可以看到分支合并图。
